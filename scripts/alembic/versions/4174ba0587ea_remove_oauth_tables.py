"""remove oauth tables

Revision ID: 4174ba0587ea
Revises: 2e59716e1ee4
Create Date: 2020-02-17 17:58:42.216492

"""
from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision = '4174ba0587ea'
down_revision = '2e59716e1ee4'
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table('oauth_client_scopes')
    op.drop_table('oauth_scopes')
    op.drop_table('oauth_access_tokens')
    op.drop_table('oauth_refresh_tokens')
    op.drop_table('oauth_codes')
    op.drop_table('oauth_clients')
    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('oauth_scopes',
    sa.Column('id', sa.INTEGER(), server_default=sa.text("nextval('oauth_scopes_id_seq'::regclass)"), autoincrement=True, nullable=False),
    sa.Column('scope', sa.VARCHAR(length=100), autoincrement=False, nullable=False),
    sa.PrimaryKeyConstraint('id', name='oauth_scopes_pkey'),
    postgresql_ignore_search_path=False
    )
    op.create_table('oauth_clients',
    sa.Column('client_id', sa.VARCHAR(length=32), autoincrement=False, nullable=False),
    sa.Column('client_name', sa.VARCHAR(length=80), autoincrement=False, nullable=False),
    sa.Column('client_secret', sa.VARCHAR(length=64), autoincrement=False, nullable=False),
    sa.Column('redirect_uri', sa.VARCHAR(length=2048), autoincrement=False, nullable=False),
    sa.Column('user_id', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], name='oauth_clients_user_id_fkey'),
    sa.PrimaryKeyConstraint('client_id', name='oauth_clients_pkey')
    )
    op.create_table('oauth_client_scopes',
    sa.Column('id', sa.INTEGER(), autoincrement=True, nullable=False),
    sa.Column('client_id', sa.VARCHAR(length=32), autoincrement=False, nullable=True),
    sa.Column('scope_id', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.ForeignKeyConstraint(['client_id'], ['oauth_clients.client_id'], name='oauth_client_scopes_client_id_fkey'),
    sa.ForeignKeyConstraint(['scope_id'], ['oauth_scopes.id'], name='oauth_client_scopes_scope_id_fkey'),
    sa.PrimaryKeyConstraint('id', name='oauth_client_scopes_pkey')
    )
    op.create_table('oauth_access_tokens',
    sa.Column('token', sa.VARCHAR(length=40), autoincrement=False, nullable=False),
    sa.Column('user_id', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('client_id', sa.VARCHAR(length=32), autoincrement=False, nullable=True),
    sa.Column('expires', postgresql.TIMESTAMP(), autoincrement=False, nullable=True),
    sa.Column('scope', sa.VARCHAR(length=100), autoincrement=False, nullable=False),
    sa.ForeignKeyConstraint(['client_id'], ['oauth_clients.client_id'], name='oauth_access_tokens_client_id_fkey'),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], name='oauth_access_tokens_user_id_fkey'),
    sa.PrimaryKeyConstraint('token', name='oauth_access_tokens_pkey')
    )
    op.create_table('oauth_refresh_tokens',
    sa.Column('token', sa.VARCHAR(length=40), autoincrement=False, nullable=False),
    sa.Column('user_id', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('client_id', sa.VARCHAR(length=32), autoincrement=False, nullable=True),
    sa.Column('expires', postgresql.TIMESTAMP(), autoincrement=False, nullable=True),
    sa.Column('scope', sa.VARCHAR(length=100), autoincrement=False, nullable=False),
    sa.ForeignKeyConstraint(['client_id'], ['oauth_clients.client_id'], name='oauth_refresh_tokens_client_id_fkey'),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], name='oauth_refresh_tokens_user_id_fkey'),
    sa.PrimaryKeyConstraint('token', name='oauth_refresh_tokens_pkey')
    )
    op.create_table('oauth_codes',
    sa.Column('code', sa.VARCHAR(length=40), autoincrement=False, nullable=False),
    sa.Column('redirect_uri', sa.VARCHAR(length=2048), autoincrement=False, nullable=False),
    sa.Column('user_id', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('client_id', sa.VARCHAR(length=32), autoincrement=False, nullable=True),
    sa.Column('expires', postgresql.TIMESTAMP(), autoincrement=False, nullable=True),
    sa.Column('scope', sa.VARCHAR(length=100), autoincrement=False, nullable=False),
    sa.ForeignKeyConstraint(['client_id'], ['oauth_clients.client_id'], name='oauth_codes_client_id_fkey'),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], name='oauth_codes_user_id_fkey'),
    sa.PrimaryKeyConstraint('code', name='oauth_codes_pkey')
    )
    # ### end Alembic commands ###
